'use strict'

const expect = require('chai').expect
const path = require('path')
const fs = require('fs')

const testPath = path.resolve(__dirname, 'test-data')
const fastaFile = 'saveFasta.test.fa'

const saveFasta = require('./saveFasta')

describe('saveFasta', function() {
	it('should work and make a fasta file and a json file with info', function() {
		const fastaEntries = [
			'>Ps_aer|GCF_000006765.1-PA0096\nMSVEIHLPGATTALPARLDGVVIGVLLDVPDAAAPVVAYPGCPSEHGLAAATTTQLSRADIGAQVALMFVAGDPRQPLLIGRIQRLPQEALAQLDGERLEFSAEREIVLRCGKASITLTRAGKVIIRGAYLSSRSTGVNRIKGGSVQIN\n',
			'>Ps_aer|GCF_000006765.1-PA0097\nMAPIFPAAPPGSTGSRAVRCRSTERGGPDMELLNATPLAAAYNQGLDAEGRESLVVIAKGSFDLPLDGREARLLDEQQTLLMVDEFYGEPGFSAPRRECEFVPFKPFCDVLVLGSAQAPGGRPVQQLTAGIRVGRVSKALTVHGPRQWEPGLLGAGAGVAQPFQSQDISYASAFGGSHASPDNPGFMDCYMANPAGCGWFPRSADTAEIVGTPMPATEKLGEPVDSPHGRFTPMALGPLGRHWQARVGFAGRYDDAWLAERFPFLPADFDERYFQSAPADQWTDHLRGGEEVLLLNLTGEERAAFRVPRREVPVTFFLKKGGHETAQARIDTLLVDCDARRVEVTWRIRRPLKRNLFEIAQVLVGSKSAAWWRARELGKDYYPSLAALARSRQAEEDEA\n',
			'>Ps_aer|GCF_000006765.1-PA0098\nMSQALSIVASGMVSAVGLSAPASCAAIRCALDNFQETRFIDQGGEWLLAASVPLEQPWRGRAKLLKMAARAIDEALRGQPDLDCTELPLLLCVAEGDRPGRCAGLDESFLRDLEGELGRRFHPSSALIARGRVGGAVALLNARKLIQGGCRQVLVAGVDSFVSGPTLAAYEARERLLTSQNSNGFIPGEGAAAVLVAAPLHEEAPQLLCIGLGFGVEKATVESEDLPLRADGLSQAVRAALAEAGCGLEQMDYRLTDISGEQYYFKEASLTLSRNLRVLKPKFDLWHPADCIGECGAAIGPALLAVALAASRKGYGDGPNVFCHLGNDAGERAAALLSYRRVRAA\n',
			'>Ps_aer|GCF_000006765.1-PA0099\nMANEVYANNMEISCKAANGKSIAAFPDVCFTPPQAPPTPLGVPIPYPNTGLSKDTTKGTRTIRITRKEVMLKNKSYYKTSYGDEPGRAPKKGIVTSKIKGKVYFTSWSMNVKFESKNVVRHLDLTTHNHASFPGNTPVWPYLDQATVDAGGGPCSNEVKKEKKDCADFKPHGSKDACAGLGAGKPSGKKTSNEADRLADKVAARKCLTARRCALQPYKPNSCCPQQTAHHLIEASALHDKGRGGKGSVPLKGISNYSENKAPCVCAEGVNQNVGTHGLMHTFQSAAAAKSRSGTLQLSNGSSISAKKTTYGTAKRQSMAAMGKVFPQSKCSKECLSAQLDNYHKQCGINARTPIKAVETGQTDVTAATQAIKTRNARLGATRSRVR\n'
		]
		const fastaPath = path.resolve(testPath, fastaFile)

		return saveFasta(fastaEntries, fastaPath).then(() => {
			let biggerThanCount = 0
			fs.createReadStream(fastaPath)
				.on('data', function(d) {
					const data = d.toString()
					biggerThanCount += (data.match(/>/g) || []).length
				})
				.on('end', () => {
					return expect(biggerThanCount).eql(fastaEntries.length)
				})
		})
	})
	after(function() {
		const fastaPath = path.resolve(testPath, fastaFile)
		fs.unlinkSync(fastaPath)
	})
})

